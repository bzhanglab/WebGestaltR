TARGET_DIR = ./rust/target
VENDORING = 
OFFLINE_OPTION = 
LIBDIR = $(TARGET_DIR)/release
STATLIB = $(LIBDIR)/libWebGestaltR.a
PKG_LIBS = -L$(LIBDIR) -lWebGestaltR
TARGET = 

all: C_clean

$(SHLIB): $(STATLIB)

CARGOTMP = $(CURDIR)/.cargo

$(STATLIB):
	@rustc --version
	if [ "$(VENDORING)" = "yes" ]; then \
	  $(TAR) --extract --xz -f ./rust/vendor.tar.xz -C ./rust && \
	    mkdir -p ./.cargo && \
	    cp ./config.toml ./.cargo/config.toml; \
	fi
	# In some environments, ~/.cargo/bin might not be included in PATH, so we need
	# to set it here to ensure cargo can be invoked. It is appended to PATH and
	# therefore is only used if cargo is absent from the user's PATH.
	if [ "$(NOT_CRAN)" != "true" ]; then \
		export CARGO_HOME=$(CARGOTMP); \
	fi && \
		 . "/Users/johnelizarraras/.cargo/env" && export PATH="$(PATH):$(HOME)/.cargo/bin" &&\
		cargo build --lib --jobs 2 --release --manifest-path=./rust/Cargo.toml --target-dir $(TARGET_DIR) $(OFFLINE_OPTION)
	if [ "$(NOT_CRAN)" != "true" ]; then \
		rm -Rf $(CARGOTMP) && \
		rm -Rf $(LIBDIR)/build; \
	fi
	

C_clean:
	rm -Rf $(SHLIB) $(STATLIB) $(OBJECTS)

clean:
	rm -Rf $(SHLIB) $(STATLIB) $(OBJECTS) rust/target
